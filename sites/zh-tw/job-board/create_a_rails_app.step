message <<-MARKDOWN
  # 目標

  * 建一個新的Rails app
  * 加一些gem使生活更輕鬆
  * 啟動Rails server並看到預設的Rails頁面
  * 瞭解一些關於Bundler與依存性管理

  # 設置

  首先，讓我們進入RailsBridge這個專案的目錄（看你要找到現有的資料夾並移動它或建一個新資料夾）

  如果你沒有RailsBridge的資料夾，使用 mkdir和cd指令去創建一個新的並且切換到此資料夾:
MARKDOWN

console_without_message "mkdir railsbridge"
console_without_message "cd railsbridge"

message <<-MARKDOWN
  # Rails New!!!
MARKDOWN

console "rails new job_board -T --skip-turbolinks"

message <<-MARKDOWN
  指令-T的意思是，當你用Rails generators新建資料夾時他不會自動產生使用測試單元的測試文件（預設的Rails測試框架）

  哇！看看所有創建的資料夾！

  # 在Sublime Text打開專案
MARKDOWN

console_with_message "把目錄移動進入你新的Rails app:", "cd job_board"

message <<-MARKDOWN
  在Sublime Text打開專案:

  * 打開 Sublime
  * 在Project底下, 選擇"Add Folder to Project"

  (你一定至少有一個視窗是打開的, 所以假如選項反灰無法點選你可以按cmd+n打開一個視窗)
MARKDOWN

discussion_box "編輯器 vs 指令列", "瀏覽編輯器與終端機指令列有什麼不同, 即使你都知道了!"

message "# 讓我們談談關於依存性(Dependencies)"

message "當我們創建一個 Rails app, 他會安裝一推默認的東西. 這個安裝清單會在一個叫`Gemfile`的檔案裡。 假如你想安裝額外的第三方代碼 (又叫做 **gems**), 你可在`Gemfile`增加幾行代碼並用 `bundle`來安裝它們"

console_with_message "Rails已經安裝好很多我們需要的東西了, 但你可以時常執行 bundle一次來重新安裝gems, 或是有在Gemfile新增再去安裝. 在終端機執行以下指令:", "bundle install"

discussion_box "'bundle'做了什麼?", <<-MARKDOWN
 Bundler 是一個Ruby社群使用在依存性管理的工具。

 * 什麼是 dependency management?
 * 為什麼我們需要它?
 * 為什麼我們甚至需要 gems?
 * 有沒有比較簡潔的方法來使用 `bundle install`? (Hint: yes!)
MARKDOWN

message "# 看看你空的app"

tip "現在是弄清楚為什麼要在終端機或令提示字元上使用多個分頁或視窗的好時機。整天啟動和停止Rails server是很乏味的，所以好的做法是一個終端機分頁或視窗用來執行指令，另一個給server用。"

console_with_message "在終端機執行這個指令來啟動Rails server:", "rails server"

message <<-MARKDOWN
  現在，讓我們來檢查瀏覽器上的預設首頁

  請前往 <http://localhost:3000>

  沒錯，這就是Rails預設的首頁!
MARKDOWN

next_step "the_request_cycle"
